name: Continuous Integration for Windows export

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: windows-2022

    steps:
      # ‚úÖ Step 1: Checkout the repository (including LFS assets)
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # ‚úÖ Step 2: Find the .yyp file in your project
      - id: find_yyp
        name: üîç Find the .yyp file
        shell: pwsh
        run: |
          $yyp = Get-ChildItem -Path ${{ github.workspace }} -Recurse -Filter *.yyp | Select-Object -First 1
          if (-not $yyp) {
            Write-Error "‚ùå No .yyp file found!"
            exit 1
          }
          "yyp-path=$($yyp.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Output "‚úÖ YYP found at $($yyp.FullName)"

      # ‚úÖ Step 3: Setup Igor CLI with Access Key
      - name: üß∞ Setup Igor (Access Key)
        uses: bscotch/igor-setup@v1
        id: igor
        with:
          target-yyp: ${{ steps.find_yyp.outputs.yyp-path }}
          access-key: ${{ secrets.ACCESS_KEY }}

      # ‚úÖ Step 4: Build the Game
      - name: üõ†Ô∏è Build Game
        uses: bscotch/igor-build@v1
        id: build
        with:
          yyp-path: ${{ steps.find_yyp.outputs.yyp-path }}
          user-dir: ${{ steps.igor.outputs.user-dir }}
          output-dir: build
          runtime: Windows  # You can change to HTML5, macOS, etc.

      # ‚úÖ Step 5: Upload Build Output
      - name: ‚¨ÜÔ∏è Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: igor-build-windows
          path: ${{ steps.build.outputs.out-dir }}
          retention-days: 1
