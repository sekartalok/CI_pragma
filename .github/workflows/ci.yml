name: Continuous Integration for Windows export

on:
  # This line allows you to run the workflow manually from the GitHub Actions page
  workflow_dispatch:
  # This line allows you to run the workflow from another workflow
  workflow_call:

jobs:
  build:
    runs-on: windows-2022
    steps:
      # Step 1: Check out the repository with the GameMaker project
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          lfs: true

      # Step 2: Find the .yyp file in the repository and save the path to an output
      - id: find_yyp
        name: Find the .yyp file
        run: |
          $yyp = Get-ChildItem -Path ${{ github.workspace }} -Recurse -Filter *.yyp
          Write-Output "YYP file found at: $yyp"
          "yyp-path=$yyp" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      # Step 3: Set up the GameMaker build CLI tool Igor
      # https://github.com/bscotch/igor-setup
      - name: use Igor Setup
        uses: bscotch/igor-setup@v1
        id: igor
        with:
          target-yyp: ${{ steps.find_yyp.outputs.yyp-path }}
          access-key: ${{ secrets.ACCESS_KEY }}
          # âœ… FIX: Add your specific runtime version here
          runtime-version: 2024.13.1.242

      # Step 4: Use Igor to build the GameMaker project
      # https://github.com/bscotch/igor-build
      - name: use Igor build
        uses: bscotch/igor-build@v1
        id: build
        with:
          yyp-path: ${{ steps.find_yyp.outputs.yyp-path }}
          user-dir: ${{ steps.igor.outputs.user-dir }}

      # Step 5: Upload the build to artifacts, so you can download it
      - name: upload-build
        uses: actions/upload-artifact@v4
        with:
          name: igor-build-windows
          path: ${{ steps.build.outputs.out-dir }}
          # Note: Longer retention days can incur additional charges on some plans.
          retention-days: 1
